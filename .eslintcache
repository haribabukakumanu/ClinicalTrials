[{"C:\\Projects\\clinicaltrials\\src\\index.js":"1","C:\\Projects\\clinicaltrials\\src\\components\\SearchForm.jsx":"2","C:\\Projects\\clinicaltrials\\src\\components\\ResultForm.jsx":"3","C:\\Projects\\clinicaltrials\\src\\api\\index.js":"4","C:\\Projects\\clinicaltrials\\src\\app\\App.js":"5","C:\\Projects\\clinicaltrials\\src\\components\\Header.jsx":"6","C:\\Projects\\clinicaltrials\\src\\components\\NoData.jsx":"7","C:\\Projects\\clinicaltrials\\src\\redux\\countries.js":"8","C:\\Projects\\clinicaltrials\\src\\api\\countries.js":"9","C:\\Projects\\clinicaltrials\\src\\redux\\store.js":"10","C:\\Projects\\clinicaltrials\\src\\redux\\trials.js":"11","C:\\Projects\\clinicaltrials\\src\\api\\trials.js":"12"},{"size":345,"mtime":1612586961726,"results":"13","hashOfConfig":"14"},{"size":4932,"mtime":1612586720546,"results":"15","hashOfConfig":"14"},{"size":2623,"mtime":1612215443004,"results":"16","hashOfConfig":"14"},{"size":866,"mtime":1612584932444,"results":"17","hashOfConfig":"14"},{"size":161,"mtime":1612047061240,"results":"18","hashOfConfig":"14"},{"size":570,"mtime":1612050607113,"results":"19","hashOfConfig":"14"},{"size":438,"mtime":1612055669628,"results":"20","hashOfConfig":"14"},{"size":1364,"mtime":1612584878948,"results":"21","hashOfConfig":"14"},{"size":256,"mtime":1612582653955,"results":"22","hashOfConfig":"14"},{"size":354,"mtime":1612586583301,"results":"23","hashOfConfig":"14"},{"size":1294,"mtime":1612587274999,"results":"24","hashOfConfig":"14"},{"size":416,"mtime":1612584936397,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ydagay",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Projects\\clinicaltrials\\src\\index.js",[],["53","54"],"C:\\Projects\\clinicaltrials\\src\\components\\SearchForm.jsx",["55","56"],"import {\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAllCountries, fetchCountries } from \"../redux/countries\";\r\nimport ResultForm from \"./ResultForm\";\r\nimport { fetchData } from \"../api\";\r\nimport Header from \"./Header\";\r\nimport NoData from \"./NoData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SearchForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const countries = useSelector(selectAllCountries);\r\n\r\n  const [searchValues, setSearchValues] = useState({\r\n    disease: \"ALS\",\r\n    country: \"United States\",\r\n    records: 10,\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleSubmit = async (disease, country, maxRecords) => {\r\n    const apiData = await fetchData(disease, country, maxRecords);\r\n\r\n    const {\r\n      NStudiesFound,\r\n      NStudiesReturned,\r\n      FullStudies,\r\n    } = apiData.FullStudiesResponse;\r\n\r\n    setData(FullStudies);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const countriesCallback = useCallback(() => {\r\n    dispatch(fetchCountries());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    countriesCallback();\r\n  }, [countriesCallback]);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValues({ ...searchValues, [e.target.name]: e.target.value });\r\n    setData([]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setData([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <form autoComplete=\"off\">\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    id=\"ConditionOrDisease\"\r\n                    label=\"Condition or Disease\"\r\n                    value={searchValues.disease}\r\n                    name=\"disease\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"country-label\">Country</InputLabel>\r\n                  <Select\r\n                    labelId=\"country-label\"\r\n                    id=\"country\"\r\n                    value={searchValues.country}\r\n                    name=\"country\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"United States\">United States</MenuItem>\r\n                    {countries.map((country, i) => (\r\n                      <MenuItem key={i} value={country}>\r\n                        {country}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"trails-label\">Number Of Trails</InputLabel>\r\n                  <Select\r\n                    labelId=\"trails-label\"\r\n                    id=\"records\"\r\n                    value={searchValues.records}\r\n                    name=\"records\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"10\">10</MenuItem>\r\n                    <MenuItem value=\"25\">25</MenuItem>\r\n                    <MenuItem value=\"50\">50</MenuItem>\r\n                    <MenuItem value=\"75\">75</MenuItem>\r\n                    <MenuItem value=\"100\">100</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <Button\r\n                  className={classes.margin}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    handleSubmit(\r\n                      searchValues.disease,\r\n                      searchValues.country,\r\n                      searchValues.records\r\n                    )\r\n                  }\r\n                >\r\n                  Search\r\n                </Button>\r\n                <Button\r\n                  className={classes.margin}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={() => handleReset()}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {data ? <ResultForm data={data}></ResultForm> : <NoData />}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Projects\\clinicaltrials\\src\\components\\ResultForm.jsx",[],"C:\\Projects\\clinicaltrials\\src\\api\\index.js",[],["57","58"],"C:\\Projects\\clinicaltrials\\src\\app\\App.js",[],"C:\\Projects\\clinicaltrials\\src\\components\\Header.jsx",[],"C:\\Projects\\clinicaltrials\\src\\components\\NoData.jsx",[],"C:\\Projects\\clinicaltrials\\src\\redux\\countries.js",[],"C:\\Projects\\clinicaltrials\\src\\api\\countries.js",[],"C:\\Projects\\clinicaltrials\\src\\redux\\store.js",[],"C:\\Projects\\clinicaltrials\\src\\redux\\trials.js",[],"C:\\Projects\\clinicaltrials\\src\\api\\trials.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":51,"column":7,"nodeType":"65","messageId":"66","endLine":51,"endColumn":20},{"ruleId":"63","severity":1,"message":"67","line":52,"column":7,"nodeType":"65","messageId":"66","endLine":52,"endColumn":23},{"ruleId":"59","replacedBy":"68"},{"ruleId":"61","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'NStudiesFound' is assigned a value but never used.","Identifier","unusedVar","'NStudiesReturned' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]